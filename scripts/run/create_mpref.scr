#!/bin/csh -f

# This script creates the MPREF file from a list of MOBILE5 input files and
# an output file from the SMOKE mvcondns utility

# The Mobile5 input files are each in a separate file per input set, and have 
# the file name structure $MO5PRE<FIPS code>$MO5EXT.  These files can be created
# from an EMS-95-style m5a.mv file using the script m5asplit.scr.

# List the assumptions about input file names here:

setenv PREFILE $PREMPREF
setenv PSIFILE $WORKDIR/psifile.us
setenv SPDFILE $WORKDIR/spdfile.us
setenv OUTFILE $MPREF
setenv TEMPFILE .tmpfile

# Sort the intermediate file from the spreadsheet
sort -u $PREFILE > $TEMPFILE

# Initialize the field array so that it has lots of elements
set field = ( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )

# Set the value of the grep command for Sun or IRIX
if ( $?EDSS_OS ) then
   if ( $EDSS_OS == 'SunOS5' ) then
      alias grep /usr/xpg4/bin/grep
   endif   
endif

echo ' ' 
echo 'Create_mpref.scr script running...'

# Create the list of all PSIs per county and all speeds per county such
# that these line up with each other

/bin/rm -f $OUTFILE

#if ( ! -e $PSIFILE || ! -e $SPDFILE ) then
   if( -e $PSIFILE ) /bin/rm -f $PSIFILE
   if( -e $SPDFILE ) /bin/rm -f $SPDFILE

   echo ' '
   echo 'Creating speeds and PSI temporary files...'

   set nlines = `cat $TEMPFILE | wc -l`

   set i = 0
   set prevfip = 0
   set prevpsi = -9
   set psilist = ' '
   set spdlist = ' '
   while ( $i < $nlines )

      @ i = $i + 1

      set field = ( `head -$i $TEMPFILE | tail -1` )
      set fip   = $field[1]
      set speed = $field[2]
      set psi   = $field[3]

      #  For the same state/county code, store the PSIs and speeds
      if ( $fip == $prevfip || $i == 1 ) then

	  if ( $prevpsi != $psi ) then

              set psilist = ( $psilist $psi )
              set spdlist = ( $spdlist $speed )

	  endif

      # Otherwise, write the PSIs and speeds for the previous FIPS code and
      #    initialize the PSIs and speeds.
      else

	  echo $prevfip $psilist >> $PSIFILE
	  echo $spdlist >> $SPDFILE

	  set psilist = $psi
	  set spdlist = $speed

      endif

      set prevfip = $fip
      set prevpsi = $psi

   end

   # Write out for the final iteration
   echo $prevfip $psilist >> $PSIFILE
   echo $spdlist >> $SPDFILE

#endif

echo 'Creating MPREF file...'

# For each of the FIPS codes in the PSI and speeds files, find the associated
# Mobile5 input file, insert the necessary fields in the proper locations, and
# concatonate all to the mobile5 output file.

set nlines = `cat $PSIFILE | wc -l`

set i = 0
while ( $i < $nlines )

   @ i = $i + 1

   set field = ( `head -$i $PSIFILE | tail -1` )

   set fip = $field[1]

   echo '   For country/state/county code' $fip '...'

   set psilist = `echo $field | cut -c6-`
   set npsi = `echo $psilist | wc -w`

   # Create MOBILE5 input file name
   set mo5bfile = $M5PATH/${MO5PRE}${fip}${MO5EXT}

   # Check to make sure MOBILE5 file exists
   if ( ! -e $mo5bfile ) then
      echo "ERROR: MOBILE5 file does not exist:"
      echo $mo5bfile
      exit(1)
   endif

   # Check to make sure that the ALHFLG is not corrupted
   grep -qi ALHLFG $mo5bfile
   if ( ! $status ) then
      echo 'ERROR: ALHLFG is in MOBILE5 file instead of ALHFLG, for file:'
      echo $mo5bfile
      exit(1)
   endif

   # Get the value of SPDFLG
   set spdflg = `grep -i SPDFLG $mo5bfile | cut -c1`
   
   # Get the value of ALHFLG
   set alhflg = `grep -i ALHFLG $mo5bfile | cut -c1`
   
   # Get the value of VMFLAG
   set vmflag = `grep -i VMFLAG $mo5bfile | cut -c1`

   # Get the value of LOCFLG
   set locflg = `grep -i LOCFLG $mo5bfile | cut -c1`

   # Get the line number of the existing scenario record
   set scenlino = `grep -n "$M5SCENID" $mo5bfile | cut -d: -f1`

   # Get the contents of the existing scenario record
   set scenrec = "`grep -n '$M5SCENID' $mo5bfile | cut -d: -f2`"

   # Get the contents of the existing local area parameter (LAP) record
   set laprec = "`grep '$M5LAPID' $mo5bfile`"

   # Get the value of the region from the scenario record
   set region = `echo "$scenrec" | cut -c1`

   # Get the value of OXYFLG from the LAP record   
   set oxyflg = `echo "$laprec" | cut -c43`

   # Get the value of DSFLAG from the LAP record
   set dsflag = `echo "$laprec" | cut -c45`

   # Get the value of RFGFLG from the LAP record
   set rfgflg = `echo "$laprec" | cut -c47`

   # Get the total number of lines in the mobile5 input file
   set totlin = `cat $mo5bfile | wc -l`

   # Determine how many lines are intended to be repeated for each scenario,
   #    based on the various settings
   set rscnlin = 0
   if ( $spdflg == 3 ) then
      @ rscnlin = $rscnlin + 1
   endif
   if ( $alhflg == 2 || $alhflg == 3 ) then
      @ rscnlin = $rscnlin + 1
   endif
   if ( $vmflag == 2 ) then
      @ rscnlin = $rscnlin + 1
   endif
   if ( $locflg == 1 ) then         # For LAP record
      @ rscnlin = $rscnlin + 1
   endif
   if ( $region == 4 ) then
      @ rscnlin = $rscnlin + 1
   endif
   if ( $oxyflg == 2 ) then
      @ rscnlin = $rscnlin + 1
   endif
   if ( $dsflag == 2 ) then
      @ rscnlin = $rscnlin + 3
   endif

   # Set the line number for the last scenario section entry
   @ esclino = $scenlino + $rscnlin 

   # Set the number of lines before and after the scenario records
   @ prelino = $scenlino - 1
   @ endlino = $totlin - $scenlino
   @ endlino = $endlino - $rscnlin

   # Create a temporary file with the scenario information in it
   head -$esclino $mo5bfile | tail -$rscnlin > $TEMPFILE

   # Insert the mobile packet line into the output file for the current FIPS code
   echo 'MOBILE5B' $npsi $psilist >> $OUTFILE

   # Concatonate the part of the current MOBILE5 input with the output file
   head -$prelino $mo5bfile >> $OUTFILE

   # Retrieve speed from speeds file
   set speeds = ( `head -$i $SPDFILE | tail -1` )
   
   # Insert scenario lines for each speed
   foreach s ( $speeds )
      set part1 = `echo "$scenrec" | cut -c1-2`
      set part2 = $M5YEAR
      set part3 = `echo "$scenrec" | cut -c10-30`
      set part4 = $JANJUL
      set decimal = `echo $s | cut -d. -f2`
      if ( $decimal == ' ' ) then
          echo "$part1" "$part2" ${s}'.0' "$part3" "$part4" >> $OUTFILE
          cat $TEMPFILE >> $OUTFILE
      else
          echo "$part1" "$part2" $s "$part3" "$part4" >> $OUTFILE
          cat $TEMPFILE >> $OUTFILE
      endif
   end

   # Insert ending part of current MOBILE5 input file into output file
   tail -$endlino $mo5bfile >> $OUTFILE

end

/bin/rm -rf $TEMPFILE
