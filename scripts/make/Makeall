#!/bin/csh -f

## This script makes all of the SMOKE programs

#
## Set controllers for turning on/off library building
#
setenv FILESET_MAKE_LIB  Y   # [ Y | N ]  # For FileSetAPI library
setenv ETOOLS_MAKE_LIB   Y   # [ Y | N ]  # For edss_tools library
setenv SMK_MAKE_LIB      Y   # [ Y | N ]  # For SMOKE library
setenv SMK_MAKE_MOBLIB   Y   # [ Y | N ]  # For MOBILE6 library
setenv SMK_MAKE          Y   # [ Y | N ]  # For SMOKE programs
#
## Set the directory for the EDSS installation
if ( $?EDSS_ROOT ) then
   if ( $?SMKROOT ) then
   else
      setenv SMKROOT $EDSS_ROOT/subsys/smokev1
   endif
   if ( $?EDSS_SUBSYS ) then
   else
      setenv EDSS_SUBSYS $EDSS_ROOT/subsys
   endif
else

   echo "ERROR: Environment variable EDSS_ROOT needs to be set to"
   echo "       use this script"
   exit( 1 )

endif

## Activate script argument
set what = $argv

## Initialize output status
set outstat = 0

## Check for installation of critical files
if ( ! -e $EDSS_ROOT/scripts/platform ) then
   echo "ERROR: platform file has not been installed in"
   echo "       $EDSS_ROOT/scripts/"
   set outstat = 1
endif

if ( ! -e $EDSS_SUBSYS/ioapi_includes/PARMS3.EXT ) then
   echo "ERROR: I/O API include files have not been installed in"
   echo "       $EDSS_SUBSYS"
   set outstat = 1
endif

if ( $outstat == 1 ) then
   exit( 1 )
endif

#
## Make FileSetAPI library
#
if ( $FILESET_MAKE_LIB == Y ) then
   echo "Building FileSetAPI library..."
   if ( ! -e $EDSS_SUBSYS/filesetapi ) then
      echo "ERROR: FileSetAPI source has not been installed in"
      echo "       $EDSS_SUBSYS"
      set outstat = 1
   else
      cd $EDSS_SUBSYS/filesetapi
      source Setup
      make clean
      Makeit $argv
   endif
endif

#
## Make EDSS tools library
#
if ( $ETOOLS_MAKE_LIB == Y ) then
   echo "Building EDSS Tools library..."
   if ( ! -e $EDSS_SUBSYS/edss_tools ) then
      echo "ERROR: EDSS Tool source has not been installed in"
      echo "       $EDSS_SUBSYS"
      set outstat = 1
   else
      cd $EDSS_SUBSYS/edss_tools/setup
      source Setup
      cd $ETLSRC
      make clean
      Makeit $argv
   endif
endif

#
## Set up for SMOKE compiling
#
if ( $SMK_MAKE_LIB == Y || $SMK_MAKE_MOBLIB == Y || $SMK_MAKE == Y ) then
   if ( ! -e $SMKROOT ) then
      echo "ERROR: SMOKE root directory not found. It was set to:"
      echo "       $SMKROOT"
   else
      cd $SMKROOT/assigns
      source sysflags
   endif
endif

## Make SMOKE library
#
if ( $?SMK_MAKE_LIB ) then

   if ( $SMK_MAKE_LIB == 'Y' ) then
      echo "Building SMOKE library..."
      cd $EL_SRC
      if ( $EDSS_EXE == Linux2_x86ifc ) then
         make ifcclean
      else
         make clean
      endif
      Makeit $argv
   endif

endif

#
## Make Mobile5b library, if requested
#
if ( $?SMK_MAKE_MOBLIB ) then

   if ( $SMK_MAKE_MOBLIB == 'Y' ) then
      echo "Building MOBILE6 library..."
      cd $M6_SRC 
      if ( $EDSS_EXE == Linux2_x86ifc ) then
         make ifcclean
      else
         make clean
      endif
      Makeit $argv
   endif

endif

if ( $SMK_MAKE == Y ) then

#
## Check that I/O API and NetCDF libaries have been installed, try to link files
#
if ( $argv == debug && $argv != clean ) then
   if ( ! -e $SMK_BIN/libsmoke.debug.a ) then
      echo "ERROR: SMOKE debug library libsmoke.debug.a is"
      echo "       missing from SMK_BIN directory:"
      echo "       $SMK_BIN"
      set outstat = 1
   endif
   if ( ! -e $TOOLS_BIN/libedsstools.debug.a ) then
      echo "ERROR: EDSS Tools debug library libedsstools.debug.a is"
      echo "       missing from TOOLS_BIN directory:"
      echo "       $TOOLS_BIN"
      set outstat = 1
   endif
   if ( ! -e $FS_BIN/libfileset.debug.a ) then
      echo "ERROR: FileSetAPI debug library libfileset.debug.a is"
      echo "       missing from FS_BIN directory:"
      echo "       $FS_BIN"
      set outstat = 1
   endif
   if ( ! -e $IOAPIDIR/libioapi.debug.a ) then
      echo "ERROR: I/O API debug library libioapi.debug.a is"
      echo "       missing from IOAPIDIR directory:"
      echo "       $IOAPIDIR"
      set outstat = 1
   endif
   if ( ! -e $NETCDFDIR/libnetcdf.debug.a ) then
      echo "ERROR: NETCDF debug library libnetcdf.debug.a is"
      echo "       missing from NETCDFDIR directory:"
      echo "       $NETCDFDIR"
      set outstat = 1
   endif
else
   if ( $argv != clean ) then
   if ( ! -e $SMK_BIN/libsmoke.a ) then
      echo "ERROR: SMOKE library libsmoke.a is"
      echo "       missing from SMK_BIN directory:"
      echo "       $SMK_BIN"
      set outstat = 1
   endif
   if ( ! -e $TOOLS_BIN/libedsstools.a ) then
      echo "ERROR: EDSS Tools library libedsstools.a is"
      echo "       missing from TOOLS_BIN directory:"
      echo "       $TOOLS_BIN"
      set outstat = 1
   endif
   if ( ! -e $FS_BIN/libfileset.a ) then
      echo "ERROR: FileSetAPI library libfileset.a is"
      echo "       missing from FS_BIN directory:"
      echo "       $FS_BIN"
      set outstat = 1
   endif
   if ( ! -e $IOAPIDIR/libioapi.a ) then
      echo "ERROR: I/O API library libioapi.a is"
      echo "       missing from IOAPIDIR directory:"
      echo "       $IOAPIDIR"
      set outstat = 1
   endif
   if ( ! -e $NETCDFDIR/libnetcdf.a ) then
      echo "ERROR: NETCDF library libnetcdf.a is"
      echo "       missing from NETCDFDIR directory:"
      echo "       $NETCDFDIR"
      set outstat = 1
   endif 
   endif
endif

#
## Abort if libraries are not okay
#
if ( $outstat == 1 ) then
   exit( 1 )
endif

#
## Make main programs
#
echo "Building Smkinven..."
cd $IV_SRC     # Smkinven
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean
endif
Makeit $argv    

echo "Building Spcmat..."
cd $SP_SRC     # Spcmat
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv    

echo "Building Grdmat..."
cd $GD_SRC     # Grdmat
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv    

echo "Building Cntlmat..."
cd $CL_SRC     # Cntlmat
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

echo "Building Temporal..."
cd $TM_SRC     # Temporal
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv    

echo "Building Rawbio, Tmpbio, Tmpbeis3, and Normbeis3..."
cd $BG_SRC    # Rawbio and Tmpbio
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

echo "Building Premobl and Emisfac..."
cd $MB_SRC     # Premobl and Emisfac
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv    

echo "Building Elevpoint and Laypoint..."
cd $PT_SRC     # Elevpoint and Laypoint
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

echo "Building Smkmerge and Mrggrid..."
cd $MG_SRC     # Smkmerge and Mrggrid
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

echo "Building Utilities..."
cd $UT_SRC     # Smk2emis and Uam2ncf
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

echo "Building Quality Assurance..."
cd $QA_SRC     # Smkreport
if ( $EDSS_EXE == Linux2_x86ifc ) then
   make ifcclean
else
   make clean 
endif
Makeit $argv

endif


exit( 0 )

