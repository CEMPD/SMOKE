C @(#)$Id$ $Source$ $Date$ 
C.........   The variables in this include file are for defining the widths
C            of character strings in SMOKE that are used for variables that
C            are source characteristics. They are all declared as private
C            so that, for instance, several modules used in the same program
C            can all include this file without duplicate declaration errors
C            during compilation.

C.........  Maximum number of source characteristics for each source category
        INTEGER, PARAMETER :: MXARCHR3 =  3   ! area
        INTEGER, PARAMETER :: MXMBCHR3 =  5   ! mobile
        INTEGER, PARAMETER :: MXPTCHR3 =  7   ! point

C.........  Width of source information strings (ABC order)
        INTEGER, PARAMETER :: BLRLEN3 =  6 ! boiler field
        INTEGER, PARAMETER :: BVGLEN3 =  4 ! biogenic veg ID
        INTEGER, PARAMETER :: CASLEN3 = 16 ! CAS code length
        INTEGER, PARAMETER :: CELLEN3 =  8 ! cell number
        INTEGER, PARAMETER :: CHRLEN3 = 20 ! 5 plant characteristics
        INTEGER, PARAMETER :: CNYLEN3 =  3 ! county code
        INTEGER, PARAMETER :: DDSLEN3 = 40 ! inventory data description
        INTEGER, PARAMETER :: DSCLEN3 = 40 ! plant description
        INTEGER, PARAMETER :: ERPLEN3 =  2 ! emission release point type
        INTEGER, PARAMETER :: FIPEXPLEN3 = 6 ! geographic code expansion
        INTEGER, PARAMETER :: FIPLEN3 = 6 + FIPEXPLEN3 ! FIPS code
        INTEGER, PARAMETER :: LNKLEN3 = 15 ! link ID field
        INTEGER, PARAMETER :: INTLEN3 =  1 ! INTEGRATE code
        INTEGER, PARAMETER :: MACLEN3 =  6 ! MACT code
        INTEGER, PARAMETER :: NAILEN3 =  6 ! NAICS code
        INTEGER, PARAMETER :: ORSLEN3 =  6 ! DOE plant ID field
        INTEGER, PARAMETER :: PHYLEN3 = 512! physical file name length
        INTEGER, PARAMETER :: PLTLEN3 = 20 ! plant ID field 
        INTEGER, PARAMETER :: POLLEN3 =  5 ! pol position field 
        INTEGER, PARAMETER :: PRCLEN3 =  3 ! mv emissions process
        INTEGER, PARAMETER :: RWTLEN3 =  3 ! roadway type 
        INTEGER, PARAMETER :: SCCEXPLEN3 = 10 ! SCC expansion
        INTEGER, PARAMETER :: SCCLEN3 = 10 + SCCEXPLEN3 ! SCC
        INTEGER, PARAMETER :: SICEXPLEN3 = 16 ! SIC expansion
        INTEGER, PARAMETER :: SICLEN3 =  4 + SICEXPLEN3 ! SIC 
        INTEGER, PARAMETER :: STPLEN3 =  3 ! source type code (used for toxics)
        INTEGER, PARAMETER :: TAGLEN3 =  8 ! tag labels
        INTEGER, PARAMETER :: TMPLEN3 = 15 ! temporal profile code 
        INTEGER, PARAMETER :: VIDLEN3 =  4 ! vehicle type ID
        INTEGER, PARAMETER :: VTPLEN3 =  6 ! vehicle type
        INTEGER, PARAMETER :: SHPLEN3 =  8 ! Shape ID
        INTEGER, PARAMETER :: EXTLEN3 =500 ! additional extended orl var

C.........  Width of other global character strings 
        INTEGER, PARAMETER :: IOVLEN3 = 16  ! length of I/O API variables
        INTEGER, PARAMETER :: IODLEN3 = 80  ! length of I/O API var descrption
        INTEGER, PARAMETER :: IOULEN3 = 16  ! length of I/O API units
        INTEGER, PARAMETER :: SDSLEN3 = 200 ! SCC description field
        INTEGER, PARAMETER :: SPNLEN3 = 10  ! Speciation profile code
        INTEGER, PARAMETER :: PLSLEN3 = IOVLEN3 * 2 + 1  ! Speciation vdesc3d
        INTEGER, PARAMETER :: SPDLEN3 = 7   ! Speed code length

C.........  Position within SCC of mobile roadway type and vehicle type ID
        INTEGER, PARAMETER :: SRS = 8 
        INTEGER, PARAMETER :: SRE = 10 
        INTEGER, PARAMETER :: SVS = 3
        INTEGER, PARAMETER :: SVE = 6 

        INTEGER, PARAMETER :: NSCCLV3 = 5  ! number of SCC levels

C.........  Variable dimensioning components and parameters, dependent...

C.........  Starts and ends of each field in point source definition
        INTEGER, PARAMETER :: PLTPOS3 = FIPLEN3 + 1       ! plant
        INTEGER, PARAMETER :: CH1POS3 = PLTPOS3 + PLTLEN3 ! char1
        INTEGER, PARAMETER :: CH2POS3 = CH1POS3 + CHRLEN3 ! char2
        INTEGER, PARAMETER :: CH3POS3 = CH2POS3 + CHRLEN3 ! char3
        INTEGER, PARAMETER :: CH4POS3 = CH3POS3 + CHRLEN3 ! char4
        INTEGER, PARAMETER :: CH5POS3 = CH4POS3 + SCCLEN3 ! char5
        INTEGER, PARAMETER :: POLPOS3 = CH5POS3 + CHRLEN3 ! pol idx
        INTEGER, DIMENSION( MXPTCHR3 + 1 ),  
     &           PARAMETER :: PTBEGL3 =               ! array of starts
     &           ( / 1      , PLTPOS3, CH1POS3, CH2POS3, 
     &               CH3POS3, CH4POS3, CH5POS3, POLPOS3  / )

        INTEGER, PARAMETER :: ALLLEN3 = POLPOS3 + POLLEN3 - 1 ! total 
        INTEGER, PARAMETER :: ALLCAS3 = ALLLEN3 + CASLEN3  ! length with CAS number
        
        INTEGER, DIMENSION( MXPTCHR3 + 1 ),  
     &           PARAMETER :: PTENDL3 =               ! array of ends
     &           ( / FIPLEN3  , CH1POS3-1, CH2POS3-1, CH3POS3-1,
     &               CH4POS3-1, CH5POS3-1, POLPOS3-1, ALLLEN3    / )

C.........  Starts and ends of each field in area source definition
        INTEGER, PARAMETER :: SCCPOS3 = FIPLEN3 + 1       ! SCC
        INTEGER, PARAMETER :: CELPOS3 = SCCPOS3 + SCCLEN3 ! SCC
        INTEGER, DIMENSION( MXARCHR3 + 1 ),  
     &           PARAMETER :: ARBEGL3 =               ! array of starts
     &                            ( / 1, SCCPOS3, CELPOS3, POLPOS3 / )

        INTEGER, DIMENSION( MXARCHR3 + 1 ),  
     &           PARAMETER :: ARENDL3 =               ! array of ends
     &                     ( / FIPLEN3, SCCPOS3+SCCLEN3-1, 
     &                         CELPOS3+CELLEN3-1,ALLLEN3  / )

C.........  Starts and ends of each field in mobile source definition
        INTEGER, PARAMETER :: RWTPOS3 = FIPLEN3 + 1       ! roadway type
        INTEGER, PARAMETER :: LNKPOS3 = RWTPOS3 + RWTLEN3 ! link
        INTEGER, PARAMETER :: VIDPOS3 = LNKPOS3 + LNKLEN3 ! vehicle type ID
        INTEGER, PARAMETER :: MSCPOS3 = VIDPOS3 + VIDLEN3 ! SCC
        INTEGER, DIMENSION( MXMBCHR3 + 1 ),
     &           PARAMETER :: MBBEGL3 =               ! array of starts
     &           ( / 1, RWTPOS3, LNKPOS3, VIDPOS3, MSCPOS3, POLPOS3 / )

        INTEGER, DIMENSION( MXMBCHR3 + 1 ),
     &           PARAMETER :: MBENDL3 =               ! array of ends
     &           ( / FIPLEN3, LNKPOS3-1, VIDPOS3-1, MSCPOS3-1,
     &               MSCPOS3 + SCCLEN3 - 1, ALLLEN3 / )

C.........  Widths that depend on other widths
        INTEGER, PARAMETER :: CDTLEN3 = CASLEN3 + IOVLEN3 ! CAS // Data name
        INTEGER, PARAMETER :: FPLLEN3 = FIPLEN3 + PLTLEN3 ! FIPS // Plant
        INTEGER, PARAMETER :: FPMLEN3 = FPLLEN3 + MACLEN3 ! FIPS // Plant // MACT
        INTEGER, PARAMETER :: FPSLEN3 = FIPLEN3 + SCCLEN3 ! FIPS // SCC
        INTEGER, PARAMETER :: FPILEN3 = FIPLEN3 + SICLEN3 ! FIPS // SIC
        INTEGER, PARAMETER :: STALEN3 = FIPLEN3 - CNYLEN3 ! Country/St
        INTEGER, PARAMETER :: STSLEN3 = STALEN3 + SCCLEN3 ! Cy/St //SCC
        INTEGER, PARAMETER :: STILEN3 = STALEN3 + SICLEN3 ! Cy/St //SIC
        INTEGER, PARAMETER :: SRCLEN3 = POLPOS3 - 1       ! Source less pol'nt
        INTEGER, PARAMETER :: OBRLEN3 = ORSLEN3 + BLRLEN3 ! oris + boiler
        INTEGER, PARAMETER :: OPTLEN3 = ORSLEN3 + CHRLEN3 ! oris + point (IDA char1)
        INTEGER, PARAMETER :: MSCLEN3 = MACLEN3 + SCCLEN3 ! MACT // SCC
        INTEGER, PARAMETER :: MSTLEN3 = MACLEN3 + STALEN3 ! MACT // Cy/St
        INTEGER, PARAMETER :: MSSLEN3 = MSTLEN3 + SCCLEN3 ! MACT // Cy/St // SCC
        INTEGER, PARAMETER :: MFPLEN3 = MACLEN3 + FIPLEN3 ! MACT // FIPS
        INTEGER, PARAMETER :: MFSLEN3 = MFPLEN3 + SCCLEN3 ! MACT // FIPS // SCC
        INTEGER, PARAMETER :: NEILEN3 = SCCLEN3 + SCCLEN3 ! NEI Unique ID 

        INTEGER, PARAMETER :: SS0LEN3 = CH1POS3-1 + SCCLEN3 ! -> Plant // SCC
        INTEGER, PARAMETER :: SS1LEN3 = CH2POS3-1 + SCCLEN3 ! -> Char1 // SCC
        INTEGER, PARAMETER :: SS2LEN3 = CH3POS3-1 + SCCLEN3 ! -> Char2 // SCC
        INTEGER, PARAMETER :: SS3LEN3 = CH4POS3-1 + SCCLEN3 ! -> Char3 // SCC
        INTEGER, PARAMETER :: SS4LEN3 = CH5POS3-1 + SCCLEN3 ! -> Char4 // SCC
        INTEGER, PARAMETER :: SS5LEN3 = POLPOS3-1 + SCCLEN3 ! -> Char5 // SCC
        
        INTEGER, PARAMETER :: SSMLEN3 = SS5LEN3 + MACLEN3 + SICLEN3 ! -> Char5 // SCC // MACT // SIC
