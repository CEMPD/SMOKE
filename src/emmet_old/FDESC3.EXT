C ****************************************************************************
C *
C * Project Title: Sparse Matrix Operator Kernel Emissions (SMOKE) Modeling
C *                System
C * File Version: @(#)$Id$
C *
C * COPYRIGHT (C) 1996, MCNC--North Carolina Supercomputing Center
C * All Rights Reserved
C *
C * See file COPYRIGHT for conditions of use.
C *
C * Environmental Programs Group
C * MCNC--North Carolina Supercomputing Center
C * P.O. Box 12889
C * Research Triangle Park, NC  27709-2889
C *
C * env_progs@mcnc.org
C *
C * Pathname: $Source$
C * Last updated: $Date$ 
C *
C
****************************************************************************/

C....................................................................
C  INCLUDE FILE  FDESC3.EXT
C
C  CONTAINS:  Fortran data structures for a MODELS 3 file description.
C             Used to pass data between RDDICT3, WRDICT3, CREATE3, DESC3,
C             and their callers.  Common BDESC3 is used to store the
C             non-character-string data, and CDESC3 is used to store
C             the character-string data (recall that FORTRAN 77 prohibits
C             character and non-character data in the same common)
C
C  SHOULD ONLY BE USED AS A NAME BASED ARGUMENT PASSING MECHANISM;
C  the user should have local variables to/from which this data structure
C  is copied immediately prior to or immediately after calls which set
C  or use these COMMONs, since their values are subject to change at
C  any time by the IOAPI.
C
C  DEPENDENT UPON:  PARMS3.EXT
C
C  REVISION HISTORY:
C       Prototype 5/91  by CJC
C       Revised   3/92  by CJC for netCDF FORTRAN implementation of Models-3 I/O
C       modified 12/92 by CJC:  map-projection descriptive parameters P_ALP,
C                               P_BET, P_GAM.
C
C  SET BY:
C          DESC3:    Everything in FDESC3.EXT
C
C          RDDICT3:  FTYPE3D, TSTEP3D, NCOLS3D, NROWS3D, NLAYS3D, NVARS3D,
C                    NTHIK3D, GDTYP3D, P_ALP3D, P_BET3D, P_GAM3D,
C                    XORIG3D, YORIG3D, XCELL3D, YCELL3D, GDNAM3D,
C                    XCENT3D, YCENT3D, VNAME3D, UNITS3D, VDESC3D
C
C  REFERENCED BY:
C          CREATE3:  FTYPE3D, SDATE3D, STIME3D, TSTEP3D, NCOLS3D, NROWS3D,
C                    NLAYS3D, NVARS3D, NTHIK3D, GDTYP3D, P_ALP3D, P_BET3D,
C                    P_GAM3D, XORIG3D, YORIG3D, XCELL3D, YCELL3D, GDNAM3D,
C                    XCENT3D, YCENT3D, VNAME3D, UNITS3D, VDESC3D
C
C          WRDICT3:  FTYPE3D, TSTEP3D, NCOLS3D, NROWS3D, NLAYS3D, NVARS3D,
C                    NTHIK3D, GDTYP3D, P_ALP3D, P_BET3D, P_GAM3D, XORIG3D,
C                    YORIG3D, XCELL3D, YCELL3D, XCELL3D, YCELL3D, GDNAM3D, 
C                    VNAME3D, UNITS3D, VDESC3D
C
C....................................................................

        INTEGER      FTYPE3D      ! file type
        INTEGER      CDATE3D      ! creation date   YYYYDDD
        INTEGER      CTIME3D      ! creation time    HHMMSS
        INTEGER      WDATE3D      ! update date     YYYYDDD
        INTEGER      WTIME3D      ! update time      HHMMSS
        INTEGER      SDATE3D      ! file start date YYYYDDD
        INTEGER      STIME3D      ! file start time  HHMMSS
        INTEGER      TSTEP3D      ! file time step   HHMMSS
        INTEGER      MXREC3D      ! maximum time step record number (1,2,...)
        INTEGER      NVARS3D      ! number of species
        INTEGER      NCOLS3D      ! number of grid columns
        INTEGER      NROWS3D      ! number of grid rows
        INTEGER      NLAYS3D      ! number of layers
        INTEGER      NTHIK3D      ! BOUNDARY:  perim thickness (cells)
                                  ! SPARSE MATRIX:  number of matrix-cols
        INTEGER      GDTYP3D      ! grid type:  1=LAT-LON, 2=UTM, ...

C.......   Note that horizontal grid definition information is REAL*8 in order 
C.......   to achieve the required precision in geographic-to/from-grid
C.......   coordinate conversions.  Meanings of the map projection
C.......   specification parameters P_ALP3D, P_BET3D, P_GAM3D depend
C.......   upon the projection type, as follows:
C.......   
C.......   If P_ALP3D < AMISS3 (=-9E36, from PARMS3.EXT), then
C.......   the grid description is missing or invalid.
C.......
C.......   lat-lon:   unused.  Coordinate units are degrees, with
C.......              -180.0 < X <= 180.0,  -90.0 <= Y <= 90.0   
C.......              Note that Western hemisphere longitudes are taken 
C.......              to be negative.
C.......
C.......   Lambert    PROJ_ALPHA <= PROJ_BETA are the two latitudes which
C.......              determine the projection cone; PROJ_GAMMA is the
C.......              central meridian.  Coordinate units are meters.
C.......
C.......   Mercator   PROJ_ALPHA and PROJ_BETA are the latitude and longitude
C.......              of the coordinate origin (within the tangent circle);
C.......              PROJ_GAMMA is the angle between the cylinder axis
C.......              and the North polar axis. Coordinate units are meters.
C.......
C.......   Stereographic   PROJ_ALPHA and PROJ_BETA are the latitude and
C.......              longitude of the point of tangency; PROJ_GAMMA is
C.......              the angle from true North to the Y-axis.  Coordinate
C.......              units are meters.
C.......   
C.......   UTM:  PROJ_ALPHA is the UTM zone, as a double.
C.......              PROJ_BETA and PROJ_GAMMA are unused.
C.......              Note that for safety, PROJ_ALPHA should be
C.......              *>rounded<* to integer.
C.......              Coordinate units are meters.
C.......   
C.......   
C.......   (XCENT3D,YCENT3D):
C.......   For Lat-Lon:  unused.
C.......   For Lambert, Mercator, and Stereographic, these are the 
C.......   longitude, -180 < X <= 180, and the latitude, -90 <= Y <= 90, 
C.......   for the center (0,0) of the respective Cartesian coordinate system.
C.......   For UTM:  
C.......   
C.......   (XORIG3D,YORIG3D) are the location in map units (deg. for lat-lon,
C.......   km otherwise) of the  lower-right corner of the origin (1,1) 
C.......   cell of the horizontal grid.
C.......   
C.......   (XCELL3D,YCELL3D) are the X-direction and Y-direction lengths
C.......   of side for cells in a regular grid.  If zero, the grid is 
C.......   taken to be an irregular grid described by other means (e.g.
C.......   a grid-geometry file).
C.......   
C.......   VGTYP3D is the vertical grid type token, VGSIGP3 for sigma-P
C.......   coordinates, VGSIGZ3 for sigma-Z, etc., or IMISS3 for vertical
C.......   coordinates not stored in VGLVS3D (e.g., temporally or spatially
C.......   changing vertical coordinates.
C.......   
C.......   VGTOP3D is the model-top used in the definition of the sigma
C.......   coordinate systems (e.g., for hydrostatic sigma-P, the 
C.......   relationship between P and sigma is given by the following:
C.......   S = ( P - VGTOP3D ) / (P_ref - VGTOP3D )
C.......   
C.......   VGLVS3D( 1, ..., NLAYS3D+1 ) is the list of vertical coordinate 
C.......   values which specify the layers of the file.  In principle, 
C.......   layer K goes from VGLVS3D( K ) to VGLVS3D( K+1 ).

        REAL*8       P_ALP3D      ! first, second, third map
        REAL*8       P_BET3D      ! projection descriptive
        REAL*8       P_GAM3D      ! parameters.

        REAL*8       XCENT3D      ! lon for coord-system X=0
        REAL*8       YCENT3D      ! lat for coord-system Y=0
        REAL*8       XORIG3D      ! X-coordinate origin of grid (map units)
        REAL*8       YORIG3D      ! Y-coordinate origin of grid
        REAL*8       XCELL3D      ! X-coordinate cell dimension
        REAL*8       YCELL3D      ! Y-coordinate cell dimension

        INTEGER      VGTYP3D      !  vertical coordinate type (VGSIGP3, ...)
        REAL         VGTOP3D      !  model-top, for sigma coord types.
        REAL         VGLVS3D( MXLAYS3 + 1 )  !  vertical coord values.

        CHARACTER*16   GDNAM3D      ! grid name             (length NAMLEN3=16)
        CHARACTER*16   UPNAM3D      ! last program writing to file (NAMLEN3=16)
        CHARACTER*80   EXECN3D      ! value of env vble EXECUTION_ID

        CHARACTER*80   FDESC3D( MXDESC3 ) ! file description (MXDLEN3=80)
        CHARACTER*80   UPDSC3D( MXDESC3 ) ! update   "       (MXDLEN3=80)

        INTEGER        VTYPE3D( MXVARS3 ) ! variable type:  M3(INT|REAL|DBLE)
        CHARACTER*16   VNAME3D( MXVARS3 ) ! variable names (length MXDLEN3=80)
        CHARACTER*16   UNITS3D( MXVARS3 ) !   "      units        (MXDLEN3=80)
        CHARACTER*80   VDESC3D( MXVARS3 ) !   "      descriptions (MXDLEN3=80)

        COMMON  / BDESC3 /      !  non-character description data
     &
     &      P_ALP3D, P_BET3D, P_GAM3D, XCENT3D, YCENT3D, 
     &      XORIG3D, YORIG3D, XCELL3D, YCELL3D,
     &      FTYPE3D, CDATE3D, CTIME3D, WDATE3D, WTIME3D,
     &      SDATE3D, STIME3D, TSTEP3D, MXREC3D,
     &      NVARS3D, NCOLS3D, NROWS3D, NLAYS3D, NTHIK3D,
     &      GDTYP3D, VGTYP3D, VGTOP3D, VGLVS3D, VTYPE3D

        COMMON  / CDESC3 /      !  character-string description data
     &
     &      GDNAM3D, UPNAM3D, EXECN3D, FDESC3D, UPDSC3D,
     &      VNAME3D, UNITS3D, VDESC3D

C................   end   FDESC3D.EXT   ....................................

